&preprocess_nml
          overwrite_output = .true.,
    input_obs_def_mod_file = '../../../observations/forward_operators/DEFAULT_obs_def_mod.F90',
   output_obs_def_mod_file = '../../../observations/forward_operators/obs_def_mod.f90',
   input_obs_kind_mod_file = '../../../assimilation_code/modules/observations/DEFAULT_obs_kind_mod.F90',
  output_obs_kind_mod_file = '../../../assimilation_code/modules/observations/obs_kind_mod.f90',
               input_files = '../../../observations/forward_operators/obs_def_1d_state_mod.f90'
/

&assim_model_nml
/

&ensemble_manager_nml
/

&obs_kind_nml
/

&obs_sequence_nml
   write_binary_obs_sequence = .false.
   read_binary_file_format   = 'big_endian'
/
! alternatives for binary read:
!   read_binary_file_format  = 'native'
!   read_binary_file_format  = 'little_endian'
!   read_binary_file_format  = 'big_endian'

&obs_rwtest_nml
   prompt_for_filenames = .false.
   filename_in   = '../data/obs_seq.binary.BE'
   filename_out  = 'obs_seq.xx'
   print_only    = .false.
   calendar      = 'no_calendar'
/

&obs_sequence_tool_nml
   filename_seq       = '../data/obs_seq.ascii'
   filename_out       = 'obs_seq.xx'
   obs_types          = 'RAW_STATE_VARIABLE'
   keep_types         = .true.,
   gregorian_cal      = .false.
/

&utilities_nml
   TERMLEVEL      = 1,
   logfilename    = 'dart_log.out'
   nmlfilename    = 'dart_log.nml'
   module_details = .false.
   print_debug    = .false.
   write_nml      = 'file'
/

